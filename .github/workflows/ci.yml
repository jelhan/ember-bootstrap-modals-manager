name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - uses: actions/setup-node@v2-beta
      with:
        node-version: '10.x'
    - name: Get package manager's global cache path
      id: global-cache-dir-path
      run: echo "::set-output name=dir::$(npm config get cache)"
    - name: Cache package manager's global cache
      id: cache-global-package-manager-cache
      uses: actions/cache@v1
      with:
        path: ${{ steps.global-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-${{ matrix.node-version }}-package-lock.json-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.node-version }}-package-lock.json-
    - name: Cache node_modules
      id: cache-node-modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-
    - name: Install Dependencies
      run: npm ci
      if: |
        steps.cache-global-package-manager-cache.outputs.cache-hit != 'true' ||
        steps.cache-node-modules.outputs.cache-hit != 'true'
    - name: Lint
      run: npm run-script lint

  test:
    name: Tests
    runs-on: ${{ matrix.os }}
    needs: lint

    strategy:
      matrix:
        os: [ubuntu-latest]
        browser: [chrome]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - uses: actions/setup-node@v2-beta
      with:
        node-version: '10.x'
    - name: Get package manager's global cache path
      id: global-cache-dir-path
      run: echo "::set-output name=dir::$(npm config get cache)"
    - name: Cache package manager's global cache
      id: cache-global-package-manager-cache
      uses: actions/cache@v1
      with:
        path: ${{ steps.global-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-${{ matrix.node-version }}-package-lock.json-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.node-version }}-package-lock.json-
    - name: Cache node_modules
      id: cache-node-modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-
    - name: Install Dependencies
      run: npm ci
      if: |
        steps.cache-global-package-manager-cache.outputs.cache-hit != 'true' ||
        steps.cache-node-modules.outputs.cache-hit != 'true'
    - name: Test
      run: npm run-script test:ember --launch ${{ matrix.browser }}

  floating-dependencies:
    name: Floating Dependencies
    runs-on: ${{ matrix.os }}
    needs: lint

    strategy:
      matrix:
        os: [ubuntu-latest]
        browser: [chrome]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - uses: actions/setup-node@v2-beta
      with:
        node-version: '10.x'
    - name: Get package manager's global cache path
      id: global-cache-dir-path
      run: echo "::set-output name=dir::$(npm config get cache)"
    - name: Cache package manager's global cache
      id: cache-global-package-manager-cache
      uses: actions/cache@v1
      with:
        path: ${{ steps.global-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-${{ matrix.node-version }}-package-lock.json-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.node-version }}-package-lock.json-
    - name: Cache node_modules
      id: cache-node-modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-
    - name: Install Dependencies
      run: npm ci
      if: |
        steps.cache-global-package-manager-cache.outputs.cache-hit != 'true' ||
        steps.cache-node-modules.outputs.cache-hit != 'true'
    - name: Test
      run: npm run-script test:ember --launch ${{ matrix.browser }}

  try-scenarios:
    name: Tests - ${{ matrix.ember-try-scenario }}
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.allow-failure }}
    needs: test

    strategy:
      fail-fast: true
      matrix:
        ember-try-scenario: [
          ember-lts-3.16,
          ember-lts-3.20,
          ember-release,
          ember-beta,
          ember-default-with-jquery,
          ember-classic
        ]
        allow-failure: [false]
        include:
          - ember-try-scenario: ember-canary
            allow-failure: true

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - uses: actions/setup-node@v2-beta
      with:
        node-version: '10.x'
    - name: Get package manager's global cache path
      id: global-cache-dir-path
      run: echo "::set-output name=dir::$(npm config get cache)"
    - name: Cache package manager's global cache
      id: cache-global-package-manager-cache
      uses: actions/cache@v1
      with:
        path: ${{ steps.global-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-${{ matrix.node-version }}-package-lock.json-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.node-version }}-package-lock.json-
    - name: Cache node_modules
      id: cache-node-modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-
    - name: Install Dependencies
      run: npm ci
      if: |
        steps.cache-global-package-manager-cache.outputs.cache-hit != 'true' ||
        steps.cache-node-modules.outputs.cache-hit != 'true'
    - name: Test
      env:
        EMBER_TRY_SCENARIO: ${{ matrix.ember-try-scenario }}
      run: node_modules/.bin/ember try:one $EMBER_TRY_SCENARIO
